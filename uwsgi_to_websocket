Using websocket instead of uwsgi

1) Uninstall uwsgi:
$ pip uninstall uwsgi

2) (Re)install gevent:
$ pip install git+https://github.com/surfly/gevent.git

3) Install some dependencies:
$ pip install cffi decorator gipc

4) Install gevent-websocket:
$ pip install hg+https://bitbucket.org/Jeffrey/gevent-websocket

Apply this "patch" in the file handle.py, located at your virtual environment:
example: vim ~/.virtualenvs/diggemsenv/lib/python2.7/site-packages/geventwebsocket/handler.py

4.1) Delete line 43:
        # Since we're now a websocket connection, we don't care what the
        # application actually responds with for the http response
        try:
            self.server.clients[self.client_address] = Client(self.client_address, self.websocket)

4.2) and paste this:
        # Since we're now a websocket connection, we don't care what the
        # application actually responds with for the http response
        try:
            c = Client(self.client_address, self.websocket)
            try:
                self.server.clients[self.client_address] = c
            except AttributeError:
                self.server.clients = {self.client_address: c}
            self.application(self.environ, lambda s, h: [])

5) Install gevent-fastcgi:
$ pip install git+https://github.com/momyc/gevent-fastcgi.git

6) Install gevent http client:
$ pip install git+https://github.com/gwik/geventhttpclient.git

7) Test:

7.1) Run NGINX:
$ cd APP_PATH
$ mkdir nginx/logs
$ nginx -p ./nginx

7.2) Run Django:
$ ./server.py 4

------------------------------------OPTIONAL----------------------------------------------

If you need to login in Facebook for developing:

1) Generate a ssl certificate

2) Get a ddns account

3) Use the ddns nginx config (you may need edit the nginx.conf):
$ cp APP_PATH/nginx/conf/nginx.conf.ddns APP_PATH/nginx/conf/nginx.conf

4) Load the local-fb-iptables-rules to redirect port 8080 and 4443:
** WARNING ** This will overwrite your original iptables rules, save them before:
$ iptables-save > iptables-rules.bkp

Then run:
$ iptables-restore fb-iptables-rules

Verify if works:
$ iptables -t nat -L
= sample output =
Chain PREROUTING (policy ACCEPT)
target     prot opt source               destination         
REDIRECT   tcp  --  anywhere             anywhere            tcp dpt:www redir ports 8080 
REDIRECT   tcp  --  anywhere             anywhere            tcp dpt:https redir ports 4443 

Chain INPUT (policy ACCEPT)
target     prot opt source               destination         

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination         
REDIRECT   tcp  --  anywhere             anywhere            tcp dpt:www redir ports 8080 
REDIRECT   tcp  --  anywhere             anywhere            tcp dpt:https redir ports 4443 

Chain POSTROUTING (policy ACCEPT)
target     prot opt source               destination  
